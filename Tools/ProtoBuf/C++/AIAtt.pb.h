// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AIAtt.proto

#ifndef PROTOBUF_AIAtt_2eproto__INCLUDED
#define PROTOBUF_AIAtt_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class AIAtt;
class AIAttDefaultTypeInternal;
extern AIAttDefaultTypeInternal _AIAtt_default_instance_;

namespace protobuf_AIAtt_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_AIAtt_2eproto

// ===================================================================

class AIAtt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AIAtt) */ {
 public:
  AIAtt();
  virtual ~AIAtt();

  AIAtt(const AIAtt& from);

  inline AIAtt& operator=(const AIAtt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AIAtt(AIAtt&& from) noexcept
    : AIAtt() {
    *this = ::std::move(from);
  }

  inline AIAtt& operator=(AIAtt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AIAtt& default_instance();

  static inline const AIAtt* internal_default_instance() {
    return reinterpret_cast<const AIAtt*>(
               &_AIAtt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AIAtt* other);
  friend void swap(AIAtt& a, AIAtt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AIAtt* New() const PROTOBUF_FINAL { return New(NULL); }

  AIAtt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AIAtt& from);
  void MergeFrom(const AIAtt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AIAtt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string scriptName = 7;
  void clear_scriptname();
  static const int kScriptNameFieldNumber = 7;
  const ::std::string& scriptname() const;
  void set_scriptname(const ::std::string& value);
  #if LANG_CXX11
  void set_scriptname(::std::string&& value);
  #endif
  void set_scriptname(const char* value);
  void set_scriptname(const char* value, size_t size);
  ::std::string* mutable_scriptname();
  ::std::string* release_scriptname();
  void set_allocated_scriptname(::std::string* scriptname);

  // int32 moveInterval = 1;
  void clear_moveinterval();
  static const int kMoveIntervalFieldNumber = 1;
  ::google::protobuf::int32 moveinterval() const;
  void set_moveinterval(::google::protobuf::int32 value);

  // float moveRadius = 2;
  void clear_moveradius();
  static const int kMoveRadiusFieldNumber = 2;
  float moveradius() const;
  void set_moveradius(float value);

  // int32 attackInterval = 3;
  void clear_attackinterval();
  static const int kAttackIntervalFieldNumber = 3;
  ::google::protobuf::int32 attackinterval() const;
  void set_attackinterval(::google::protobuf::int32 value);

  // int32 thinkInterval = 4;
  void clear_thinkinterval();
  static const int kThinkIntervalFieldNumber = 4;
  ::google::protobuf::int32 thinkinterval() const;
  void set_thinkinterval(::google::protobuf::int32 value);

  // int32 searchInterval = 5;
  void clear_searchinterval();
  static const int kSearchIntervalFieldNumber = 5;
  ::google::protobuf::int32 searchinterval() const;
  void set_searchinterval(::google::protobuf::int32 value);

  // float searchRadius = 6;
  void clear_searchradius();
  static const int kSearchRadiusFieldNumber = 6;
  float searchradius() const;
  void set_searchradius(float value);

  // float rotateAngle = 8;
  void clear_rotateangle();
  static const int kRotateAngleFieldNumber = 8;
  float rotateangle() const;
  void set_rotateangle(float value);

  // @@protoc_insertion_point(class_scope:AIAtt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr scriptname_;
  ::google::protobuf::int32 moveinterval_;
  float moveradius_;
  ::google::protobuf::int32 attackinterval_;
  ::google::protobuf::int32 thinkinterval_;
  ::google::protobuf::int32 searchinterval_;
  float searchradius_;
  float rotateangle_;
  mutable int _cached_size_;
  friend struct protobuf_AIAtt_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AIAtt

// int32 moveInterval = 1;
inline void AIAtt::clear_moveinterval() {
  moveinterval_ = 0;
}
inline ::google::protobuf::int32 AIAtt::moveinterval() const {
  // @@protoc_insertion_point(field_get:AIAtt.moveInterval)
  return moveinterval_;
}
inline void AIAtt::set_moveinterval(::google::protobuf::int32 value) {
  
  moveinterval_ = value;
  // @@protoc_insertion_point(field_set:AIAtt.moveInterval)
}

// float moveRadius = 2;
inline void AIAtt::clear_moveradius() {
  moveradius_ = 0;
}
inline float AIAtt::moveradius() const {
  // @@protoc_insertion_point(field_get:AIAtt.moveRadius)
  return moveradius_;
}
inline void AIAtt::set_moveradius(float value) {
  
  moveradius_ = value;
  // @@protoc_insertion_point(field_set:AIAtt.moveRadius)
}

// int32 attackInterval = 3;
inline void AIAtt::clear_attackinterval() {
  attackinterval_ = 0;
}
inline ::google::protobuf::int32 AIAtt::attackinterval() const {
  // @@protoc_insertion_point(field_get:AIAtt.attackInterval)
  return attackinterval_;
}
inline void AIAtt::set_attackinterval(::google::protobuf::int32 value) {
  
  attackinterval_ = value;
  // @@protoc_insertion_point(field_set:AIAtt.attackInterval)
}

// int32 thinkInterval = 4;
inline void AIAtt::clear_thinkinterval() {
  thinkinterval_ = 0;
}
inline ::google::protobuf::int32 AIAtt::thinkinterval() const {
  // @@protoc_insertion_point(field_get:AIAtt.thinkInterval)
  return thinkinterval_;
}
inline void AIAtt::set_thinkinterval(::google::protobuf::int32 value) {
  
  thinkinterval_ = value;
  // @@protoc_insertion_point(field_set:AIAtt.thinkInterval)
}

// int32 searchInterval = 5;
inline void AIAtt::clear_searchinterval() {
  searchinterval_ = 0;
}
inline ::google::protobuf::int32 AIAtt::searchinterval() const {
  // @@protoc_insertion_point(field_get:AIAtt.searchInterval)
  return searchinterval_;
}
inline void AIAtt::set_searchinterval(::google::protobuf::int32 value) {
  
  searchinterval_ = value;
  // @@protoc_insertion_point(field_set:AIAtt.searchInterval)
}

// float searchRadius = 6;
inline void AIAtt::clear_searchradius() {
  searchradius_ = 0;
}
inline float AIAtt::searchradius() const {
  // @@protoc_insertion_point(field_get:AIAtt.searchRadius)
  return searchradius_;
}
inline void AIAtt::set_searchradius(float value) {
  
  searchradius_ = value;
  // @@protoc_insertion_point(field_set:AIAtt.searchRadius)
}

// string scriptName = 7;
inline void AIAtt::clear_scriptname() {
  scriptname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AIAtt::scriptname() const {
  // @@protoc_insertion_point(field_get:AIAtt.scriptName)
  return scriptname_.GetNoArena();
}
inline void AIAtt::set_scriptname(const ::std::string& value) {
  
  scriptname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AIAtt.scriptName)
}
#if LANG_CXX11
inline void AIAtt::set_scriptname(::std::string&& value) {
  
  scriptname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AIAtt.scriptName)
}
#endif
inline void AIAtt::set_scriptname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scriptname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AIAtt.scriptName)
}
inline void AIAtt::set_scriptname(const char* value, size_t size) {
  
  scriptname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AIAtt.scriptName)
}
inline ::std::string* AIAtt::mutable_scriptname() {
  
  // @@protoc_insertion_point(field_mutable:AIAtt.scriptName)
  return scriptname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AIAtt::release_scriptname() {
  // @@protoc_insertion_point(field_release:AIAtt.scriptName)
  
  return scriptname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AIAtt::set_allocated_scriptname(::std::string* scriptname) {
  if (scriptname != NULL) {
    
  } else {
    
  }
  scriptname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scriptname);
  // @@protoc_insertion_point(field_set_allocated:AIAtt.scriptName)
}

// float rotateAngle = 8;
inline void AIAtt::clear_rotateangle() {
  rotateangle_ = 0;
}
inline float AIAtt::rotateangle() const {
  // @@protoc_insertion_point(field_get:AIAtt.rotateAngle)
  return rotateangle_;
}
inline void AIAtt::set_rotateangle(float value) {
  
  rotateangle_ = value;
  // @@protoc_insertion_point(field_set:AIAtt.rotateAngle)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AIAtt_2eproto__INCLUDED
