// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GOODS_INFO.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GOODS_INFO.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoBuf {
class GOODS_INFO_PriceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GOODS_INFO_Price>
     _instance;
} _GOODS_INFO_Price_default_instance_;
class GOODS_INFO_GoodsAttrDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GOODS_INFO_GoodsAttr>
     _instance;
} _GOODS_INFO_GoodsAttr_default_instance_;
class GOODS_INFODefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GOODS_INFO>
     _instance;
} _GOODS_INFO_default_instance_;
class GOODS_INFO_ARRAYDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GOODS_INFO_ARRAY>
     _instance;
} _GOODS_INFO_ARRAY_default_instance_;

namespace protobuf_GOODS_5fINFO_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_Price, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_Price, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_Price, price_dq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_Price, price_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_Price, price_value_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_GoodsAttr, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_GoodsAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_GoodsAttr, attr_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_GoodsAttr, attr_value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, goods_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, level_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, club_vip_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, qb_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, consume_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, time_unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, is_online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, can_buy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, can_recharge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, online_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, offline_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, privileged_plat_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, privileged_plat_is_online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, privileged_plat_can_buy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, privileged_plat_can_recharge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, payment_terms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, valid_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, sort_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, suit_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, bag_sort_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, price_discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, vip_discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, price_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, goods_attr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, limit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO, subsystemid_),
  7,
  0,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  1,
  2,
  ~0u,
  17,
  18,
  19,
  20,
  3,
  21,
  22,
  23,
  4,
  24,
  25,
  26,
  ~0u,
  ~0u,
  5,
  27,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_ARRAY, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_ARRAY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GOODS_INFO_ARRAY, items_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(GOODS_INFO_Price)},
  { 11, 18, sizeof(GOODS_INFO_GoodsAttr)},
  { 20, 56, sizeof(GOODS_INFO)},
  { 87, 93, sizeof(GOODS_INFO_ARRAY)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GOODS_INFO_Price_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GOODS_INFO_GoodsAttr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GOODS_INFO_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GOODS_INFO_ARRAY_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "GOODS_INFO.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _GOODS_INFO_Price_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GOODS_INFO_Price_default_instance_);_GOODS_INFO_GoodsAttr_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GOODS_INFO_GoodsAttr_default_instance_);_GOODS_INFO_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GOODS_INFO_default_instance_);_GOODS_INFO_ARRAY_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GOODS_INFO_ARRAY_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020GOODS_INFO.proto\022\010ProtoBuf\"\300\007\n\nGOODS_I"
      "NFO\022\023\n\010goods_id\030\001 \002(\r:\0010\022\016\n\004name\030\002 \001(\014:\000"
      "\022\016\n\003sex\030\003 \001(\r:\0010\022\026\n\013level_limit\030\004 \001(\r:\0010"
      "\022\031\n\016club_vip_level\030\005 \001(\005:\0010\022\017\n\004qb_2\030\006 \001("
      "\005:\0010\022\027\n\014consume_type\030\007 \001(\r:\0010\022\024\n\ttime_un"
      "it\030\010 \001(\r:\0010\022\024\n\tis_online\030\t \001(\r:\0010\022\022\n\007can"
      "_buy\030\n \001(\r:\0010\022\027\n\014can_recharge\030\013 \001(\r:\0010\022\025"
      "\n\013online_time\030\014 \001(\014:\000\022\026\n\014offline_time\030\r "
      "\001(\014:\000\022\037\n\027privileged_plat_id_list\030\016 \003(\r\022$"
      "\n\031privileged_plat_is_online\030\017 \001(\r:\0010\022\"\n\027"
      "privileged_plat_can_buy\030\020 \001(\r:\0010\022\'\n\034priv"
      "ileged_plat_can_recharge\030\021 \001(\r:\0010\022\030\n\rpay"
      "ment_terms\030\022 \001(\r:\0010\022\024\n\nvalid_time\030\023 \001(\014:"
      "\000\022\030\n\rsort_priority\030\024 \001(\r:\0010\022\026\n\013suit_numb"
      "er\030\025 \001(\005:\0010\022\034\n\021bag_sort_priority\030\026 \001(\r:\001"
      "0\022\020\n\006status\030\027 \001(\014:\000\022\017\n\004rank\030\030 \001(\r:\0010\022\031\n\016"
      "price_discount\030\031 \001(\r:\0010\022\027\n\014vip_discount\030"
      "\032 \001(\r:\0010\022/\n\013price_table\030\033 \003(\0132\032.ProtoBuf"
      ".GOODS_INFO.Price\0222\n\ngoods_attr\030\034 \003(\0132\036."
      "ProtoBuf.GOODS_INFO.GoodsAttr\022\025\n\013descrip"
      "tion\030\035 \001(\014:\000\022\023\n\010limit_id\030\036 \001(\r:\0010\022\025\n\013sub"
      "SystemId\030\037 \001(\014:\000\032K\n\005Price\022\023\n\010price_dq\030\001 "
      "\001(\r:\0010\022\025\n\nprice_gold\030\002 \001(\r:\0010\022\026\n\013price_v"
      "alue\030\003 \001(\r:\0010\0328\n\tGoodsAttr\022\024\n\tattr_type\030"
      "\001 \001(\r:\0010\022\025\n\nattr_value\030\002 \001(\r:\0010\"7\n\020GOODS"
      "_INFO_ARRAY\022#\n\005items\030\001 \003(\0132\024.ProtoBuf.GO"
      "ODS_INFO"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1048);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GOODS_INFO.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_GOODS_5fINFO_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GOODS_INFO_Price::kPriceDqFieldNumber;
const int GOODS_INFO_Price::kPriceGoldFieldNumber;
const int GOODS_INFO_Price::kPriceValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GOODS_INFO_Price::GOODS_INFO_Price()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GOODS_5fINFO_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuf.GOODS_INFO.Price)
}
GOODS_INFO_Price::GOODS_INFO_Price(const GOODS_INFO_Price& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&price_dq_, &from.price_dq_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_value_) -
    reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
  // @@protoc_insertion_point(copy_constructor:ProtoBuf.GOODS_INFO.Price)
}

void GOODS_INFO_Price::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&price_dq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_value_) -
      reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
}

GOODS_INFO_Price::~GOODS_INFO_Price() {
  // @@protoc_insertion_point(destructor:ProtoBuf.GOODS_INFO.Price)
  SharedDtor();
}

void GOODS_INFO_Price::SharedDtor() {
}

void GOODS_INFO_Price::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GOODS_INFO_Price::descriptor() {
  protobuf_GOODS_5fINFO_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GOODS_5fINFO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GOODS_INFO_Price& GOODS_INFO_Price::default_instance() {
  protobuf_GOODS_5fINFO_2eproto::InitDefaults();
  return *internal_default_instance();
}

GOODS_INFO_Price* GOODS_INFO_Price::New(::google::protobuf::Arena* arena) const {
  GOODS_INFO_Price* n = new GOODS_INFO_Price;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GOODS_INFO_Price::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoBuf.GOODS_INFO.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&price_dq_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&price_value_) -
        reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GOODS_INFO_Price::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuf.GOODS_INFO.Price)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 price_dq = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_price_dq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_dq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 price_gold = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_price_gold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 price_value = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_price_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuf.GOODS_INFO.Price)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuf.GOODS_INFO.Price)
  return false;
#undef DO_
}

void GOODS_INFO_Price::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuf.GOODS_INFO.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 price_dq = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->price_dq(), output);
  }

  // optional uint32 price_gold = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price_gold(), output);
  }

  // optional uint32 price_value = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->price_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuf.GOODS_INFO.Price)
}

::google::protobuf::uint8* GOODS_INFO_Price::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuf.GOODS_INFO.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 price_dq = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->price_dq(), target);
  }

  // optional uint32 price_gold = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price_gold(), target);
  }

  // optional uint32 price_value = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->price_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuf.GOODS_INFO.Price)
  return target;
}

size_t GOODS_INFO_Price::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoBuf.GOODS_INFO.Price)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 price_dq = 1 [default = 0];
    if (has_price_dq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_dq());
    }

    // optional uint32 price_gold = 2 [default = 0];
    if (has_price_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_gold());
    }

    // optional uint32 price_value = 3 [default = 0];
    if (has_price_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GOODS_INFO_Price::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoBuf.GOODS_INFO.Price)
  GOOGLE_DCHECK_NE(&from, this);
  const GOODS_INFO_Price* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GOODS_INFO_Price>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoBuf.GOODS_INFO.Price)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoBuf.GOODS_INFO.Price)
    MergeFrom(*source);
  }
}

void GOODS_INFO_Price::MergeFrom(const GOODS_INFO_Price& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoBuf.GOODS_INFO.Price)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      price_dq_ = from.price_dq_;
    }
    if (cached_has_bits & 0x00000002u) {
      price_gold_ = from.price_gold_;
    }
    if (cached_has_bits & 0x00000004u) {
      price_value_ = from.price_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GOODS_INFO_Price::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoBuf.GOODS_INFO.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GOODS_INFO_Price::CopyFrom(const GOODS_INFO_Price& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoBuf.GOODS_INFO.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GOODS_INFO_Price::IsInitialized() const {
  return true;
}

void GOODS_INFO_Price::Swap(GOODS_INFO_Price* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GOODS_INFO_Price::InternalSwap(GOODS_INFO_Price* other) {
  using std::swap;
  swap(price_dq_, other->price_dq_);
  swap(price_gold_, other->price_gold_);
  swap(price_value_, other->price_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GOODS_INFO_Price::GetMetadata() const {
  protobuf_GOODS_5fINFO_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GOODS_5fINFO_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GOODS_INFO_Price

// optional uint32 price_dq = 1 [default = 0];
bool GOODS_INFO_Price::has_price_dq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GOODS_INFO_Price::set_has_price_dq() {
  _has_bits_[0] |= 0x00000001u;
}
void GOODS_INFO_Price::clear_has_price_dq() {
  _has_bits_[0] &= ~0x00000001u;
}
void GOODS_INFO_Price::clear_price_dq() {
  price_dq_ = 0u;
  clear_has_price_dq();
}
::google::protobuf::uint32 GOODS_INFO_Price::price_dq() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.Price.price_dq)
  return price_dq_;
}
void GOODS_INFO_Price::set_price_dq(::google::protobuf::uint32 value) {
  set_has_price_dq();
  price_dq_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.Price.price_dq)
}

// optional uint32 price_gold = 2 [default = 0];
bool GOODS_INFO_Price::has_price_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GOODS_INFO_Price::set_has_price_gold() {
  _has_bits_[0] |= 0x00000002u;
}
void GOODS_INFO_Price::clear_has_price_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
void GOODS_INFO_Price::clear_price_gold() {
  price_gold_ = 0u;
  clear_has_price_gold();
}
::google::protobuf::uint32 GOODS_INFO_Price::price_gold() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.Price.price_gold)
  return price_gold_;
}
void GOODS_INFO_Price::set_price_gold(::google::protobuf::uint32 value) {
  set_has_price_gold();
  price_gold_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.Price.price_gold)
}

// optional uint32 price_value = 3 [default = 0];
bool GOODS_INFO_Price::has_price_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GOODS_INFO_Price::set_has_price_value() {
  _has_bits_[0] |= 0x00000004u;
}
void GOODS_INFO_Price::clear_has_price_value() {
  _has_bits_[0] &= ~0x00000004u;
}
void GOODS_INFO_Price::clear_price_value() {
  price_value_ = 0u;
  clear_has_price_value();
}
::google::protobuf::uint32 GOODS_INFO_Price::price_value() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.Price.price_value)
  return price_value_;
}
void GOODS_INFO_Price::set_price_value(::google::protobuf::uint32 value) {
  set_has_price_value();
  price_value_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.Price.price_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GOODS_INFO_GoodsAttr::kAttrTypeFieldNumber;
const int GOODS_INFO_GoodsAttr::kAttrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GOODS_INFO_GoodsAttr::GOODS_INFO_GoodsAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GOODS_5fINFO_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuf.GOODS_INFO.GoodsAttr)
}
GOODS_INFO_GoodsAttr::GOODS_INFO_GoodsAttr(const GOODS_INFO_GoodsAttr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&attr_type_, &from.attr_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&attr_value_) -
    reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
  // @@protoc_insertion_point(copy_constructor:ProtoBuf.GOODS_INFO.GoodsAttr)
}

void GOODS_INFO_GoodsAttr::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&attr_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attr_value_) -
      reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
}

GOODS_INFO_GoodsAttr::~GOODS_INFO_GoodsAttr() {
  // @@protoc_insertion_point(destructor:ProtoBuf.GOODS_INFO.GoodsAttr)
  SharedDtor();
}

void GOODS_INFO_GoodsAttr::SharedDtor() {
}

void GOODS_INFO_GoodsAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GOODS_INFO_GoodsAttr::descriptor() {
  protobuf_GOODS_5fINFO_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GOODS_5fINFO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GOODS_INFO_GoodsAttr& GOODS_INFO_GoodsAttr::default_instance() {
  protobuf_GOODS_5fINFO_2eproto::InitDefaults();
  return *internal_default_instance();
}

GOODS_INFO_GoodsAttr* GOODS_INFO_GoodsAttr::New(::google::protobuf::Arena* arena) const {
  GOODS_INFO_GoodsAttr* n = new GOODS_INFO_GoodsAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GOODS_INFO_GoodsAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoBuf.GOODS_INFO.GoodsAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&attr_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&attr_value_) -
        reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GOODS_INFO_GoodsAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuf.GOODS_INFO.GoodsAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 attr_type = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_attr_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 attr_value = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_attr_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuf.GOODS_INFO.GoodsAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuf.GOODS_INFO.GoodsAttr)
  return false;
#undef DO_
}

void GOODS_INFO_GoodsAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuf.GOODS_INFO.GoodsAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 attr_type = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->attr_type(), output);
  }

  // optional uint32 attr_value = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attr_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuf.GOODS_INFO.GoodsAttr)
}

::google::protobuf::uint8* GOODS_INFO_GoodsAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuf.GOODS_INFO.GoodsAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 attr_type = 1 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->attr_type(), target);
  }

  // optional uint32 attr_value = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->attr_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuf.GOODS_INFO.GoodsAttr)
  return target;
}

size_t GOODS_INFO_GoodsAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoBuf.GOODS_INFO.GoodsAttr)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 attr_type = 1 [default = 0];
    if (has_attr_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attr_type());
    }

    // optional uint32 attr_value = 2 [default = 0];
    if (has_attr_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attr_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GOODS_INFO_GoodsAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoBuf.GOODS_INFO.GoodsAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const GOODS_INFO_GoodsAttr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GOODS_INFO_GoodsAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoBuf.GOODS_INFO.GoodsAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoBuf.GOODS_INFO.GoodsAttr)
    MergeFrom(*source);
  }
}

void GOODS_INFO_GoodsAttr::MergeFrom(const GOODS_INFO_GoodsAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoBuf.GOODS_INFO.GoodsAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      attr_type_ = from.attr_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      attr_value_ = from.attr_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GOODS_INFO_GoodsAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoBuf.GOODS_INFO.GoodsAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GOODS_INFO_GoodsAttr::CopyFrom(const GOODS_INFO_GoodsAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoBuf.GOODS_INFO.GoodsAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GOODS_INFO_GoodsAttr::IsInitialized() const {
  return true;
}

void GOODS_INFO_GoodsAttr::Swap(GOODS_INFO_GoodsAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GOODS_INFO_GoodsAttr::InternalSwap(GOODS_INFO_GoodsAttr* other) {
  using std::swap;
  swap(attr_type_, other->attr_type_);
  swap(attr_value_, other->attr_value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GOODS_INFO_GoodsAttr::GetMetadata() const {
  protobuf_GOODS_5fINFO_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GOODS_5fINFO_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GOODS_INFO_GoodsAttr

// optional uint32 attr_type = 1 [default = 0];
bool GOODS_INFO_GoodsAttr::has_attr_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GOODS_INFO_GoodsAttr::set_has_attr_type() {
  _has_bits_[0] |= 0x00000001u;
}
void GOODS_INFO_GoodsAttr::clear_has_attr_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void GOODS_INFO_GoodsAttr::clear_attr_type() {
  attr_type_ = 0u;
  clear_has_attr_type();
}
::google::protobuf::uint32 GOODS_INFO_GoodsAttr::attr_type() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.GoodsAttr.attr_type)
  return attr_type_;
}
void GOODS_INFO_GoodsAttr::set_attr_type(::google::protobuf::uint32 value) {
  set_has_attr_type();
  attr_type_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.GoodsAttr.attr_type)
}

// optional uint32 attr_value = 2 [default = 0];
bool GOODS_INFO_GoodsAttr::has_attr_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GOODS_INFO_GoodsAttr::set_has_attr_value() {
  _has_bits_[0] |= 0x00000002u;
}
void GOODS_INFO_GoodsAttr::clear_has_attr_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void GOODS_INFO_GoodsAttr::clear_attr_value() {
  attr_value_ = 0u;
  clear_has_attr_value();
}
::google::protobuf::uint32 GOODS_INFO_GoodsAttr::attr_value() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.GoodsAttr.attr_value)
  return attr_value_;
}
void GOODS_INFO_GoodsAttr::set_attr_value(::google::protobuf::uint32 value) {
  set_has_attr_value();
  attr_value_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.GoodsAttr.attr_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GOODS_INFO::kGoodsIdFieldNumber;
const int GOODS_INFO::kNameFieldNumber;
const int GOODS_INFO::kSexFieldNumber;
const int GOODS_INFO::kLevelLimitFieldNumber;
const int GOODS_INFO::kClubVipLevelFieldNumber;
const int GOODS_INFO::kQb2FieldNumber;
const int GOODS_INFO::kConsumeTypeFieldNumber;
const int GOODS_INFO::kTimeUnitFieldNumber;
const int GOODS_INFO::kIsOnlineFieldNumber;
const int GOODS_INFO::kCanBuyFieldNumber;
const int GOODS_INFO::kCanRechargeFieldNumber;
const int GOODS_INFO::kOnlineTimeFieldNumber;
const int GOODS_INFO::kOfflineTimeFieldNumber;
const int GOODS_INFO::kPrivilegedPlatIdListFieldNumber;
const int GOODS_INFO::kPrivilegedPlatIsOnlineFieldNumber;
const int GOODS_INFO::kPrivilegedPlatCanBuyFieldNumber;
const int GOODS_INFO::kPrivilegedPlatCanRechargeFieldNumber;
const int GOODS_INFO::kPaymentTermsFieldNumber;
const int GOODS_INFO::kValidTimeFieldNumber;
const int GOODS_INFO::kSortPriorityFieldNumber;
const int GOODS_INFO::kSuitNumberFieldNumber;
const int GOODS_INFO::kBagSortPriorityFieldNumber;
const int GOODS_INFO::kStatusFieldNumber;
const int GOODS_INFO::kRankFieldNumber;
const int GOODS_INFO::kPriceDiscountFieldNumber;
const int GOODS_INFO::kVipDiscountFieldNumber;
const int GOODS_INFO::kPriceTableFieldNumber;
const int GOODS_INFO::kGoodsAttrFieldNumber;
const int GOODS_INFO::kDescriptionFieldNumber;
const int GOODS_INFO::kLimitIdFieldNumber;
const int GOODS_INFO::kSubSystemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GOODS_INFO::GOODS_INFO()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GOODS_5fINFO_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuf.GOODS_INFO)
}
GOODS_INFO::GOODS_INFO(const GOODS_INFO& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      privileged_plat_id_list_(from.privileged_plat_id_list_),
      price_table_(from.price_table_),
      goods_attr_(from.goods_attr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  online_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_online_time()) {
    online_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_time_);
  }
  offline_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_offline_time()) {
    offline_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offline_time_);
  }
  valid_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_valid_time()) {
    valid_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valid_time_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status()) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  subsystemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_subsystemid()) {
    subsystemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subsystemid_);
  }
  ::memcpy(&goods_id_, &from.goods_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_id_) -
    reinterpret_cast<char*>(&goods_id_)) + sizeof(limit_id_));
  // @@protoc_insertion_point(copy_constructor:ProtoBuf.GOODS_INFO)
}

void GOODS_INFO::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offline_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subsystemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&goods_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_id_) -
      reinterpret_cast<char*>(&goods_id_)) + sizeof(limit_id_));
}

GOODS_INFO::~GOODS_INFO() {
  // @@protoc_insertion_point(destructor:ProtoBuf.GOODS_INFO)
  SharedDtor();
}

void GOODS_INFO::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offline_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subsystemid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GOODS_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GOODS_INFO::descriptor() {
  protobuf_GOODS_5fINFO_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GOODS_5fINFO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GOODS_INFO& GOODS_INFO::default_instance() {
  protobuf_GOODS_5fINFO_2eproto::InitDefaults();
  return *internal_default_instance();
}

GOODS_INFO* GOODS_INFO::New(::google::protobuf::Arena* arena) const {
  GOODS_INFO* n = new GOODS_INFO;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GOODS_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoBuf.GOODS_INFO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  privileged_plat_id_list_.Clear();
  price_table_.Clear();
  goods_attr_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!online_time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*online_time_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!offline_time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*offline_time_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!valid_time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*valid_time_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!status_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*status_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!subsystemid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*subsystemid_.UnsafeRawStringPointer())->clear();
    }
  }
  goods_id_ = 0u;
  if (cached_has_bits & 65280u) {
    ::memset(&sex_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&can_buy_) -
        reinterpret_cast<char*>(&sex_)) + sizeof(can_buy_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&can_recharge_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bag_sort_priority_) -
        reinterpret_cast<char*>(&can_recharge_)) + sizeof(bag_sort_priority_));
  }
  if (cached_has_bits & 251658240u) {
    ::memset(&rank_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&limit_id_) -
        reinterpret_cast<char*>(&rank_)) + sizeof(limit_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GOODS_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuf.GOODS_INFO)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 goods_id = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_goods_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goods_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes name = 2 [default = ""];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sex = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level_limit = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_level_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 club_vip_level = 5 [default = 0];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_club_vip_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &club_vip_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 qb_2 = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_qb_2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qb_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 consume_type = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_consume_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consume_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_unit = 8 [default = 0];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_time_unit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 is_online = 9 [default = 0];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_is_online();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 can_buy = 10 [default = 0];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_can_buy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &can_buy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 can_recharge = 11 [default = 0];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_can_recharge();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &can_recharge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes online_time = 12 [default = ""];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_online_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes offline_time = 13 [default = ""];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_offline_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 privileged_plat_id_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 112u, input, this->mutable_privileged_plat_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_privileged_plat_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 privileged_plat_is_online = 15 [default = 0];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_privileged_plat_is_online();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_is_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 privileged_plat_can_buy = 16 [default = 0];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_privileged_plat_can_buy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_can_buy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 privileged_plat_can_recharge = 17 [default = 0];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_privileged_plat_can_recharge();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_can_recharge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 payment_terms = 18 [default = 0];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          set_has_payment_terms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payment_terms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes valid_time = 19 [default = ""];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_valid_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sort_priority = 20 [default = 0];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_sort_priority();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 suit_number = 21 [default = 0];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_suit_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bag_sort_priority = 22 [default = 0];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_bag_sort_priority();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bag_sort_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes status = 23 [default = ""];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rank = 24 [default = 0];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {
          set_has_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 price_discount = 25 [default = 0];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_price_discount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 vip_discount = 26 [default = 0];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          set_has_vip_discount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vip_discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtoBuf.GOODS_INFO.Price price_table = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_price_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtoBuf.GOODS_INFO.GoodsAttr goods_attr = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_attr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes description = 29 [default = ""];
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 limit_id = 30 [default = 0];
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_limit_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes subSystemId = 31 [default = ""];
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_subsystemid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuf.GOODS_INFO)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuf.GOODS_INFO)
  return false;
#undef DO_
}

void GOODS_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuf.GOODS_INFO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 goods_id = 1 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goods_id(), output);
  }

  // optional bytes name = 2 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // optional uint32 sex = 3 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sex(), output);
  }

  // optional uint32 level_limit = 4 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level_limit(), output);
  }

  // optional int32 club_vip_level = 5 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->club_vip_level(), output);
  }

  // optional int32 qb_2 = 6 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->qb_2(), output);
  }

  // optional uint32 consume_type = 7 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->consume_type(), output);
  }

  // optional uint32 time_unit = 8 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->time_unit(), output);
  }

  // optional uint32 is_online = 9 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->is_online(), output);
  }

  // optional uint32 can_buy = 10 [default = 0];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->can_buy(), output);
  }

  // optional uint32 can_recharge = 11 [default = 0];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->can_recharge(), output);
  }

  // optional bytes online_time = 12 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->online_time(), output);
  }

  // optional bytes offline_time = 13 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->offline_time(), output);
  }

  // repeated uint32 privileged_plat_id_list = 14;
  for (int i = 0, n = this->privileged_plat_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      14, this->privileged_plat_id_list(i), output);
  }

  // optional uint32 privileged_plat_is_online = 15 [default = 0];
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->privileged_plat_is_online(), output);
  }

  // optional uint32 privileged_plat_can_buy = 16 [default = 0];
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->privileged_plat_can_buy(), output);
  }

  // optional uint32 privileged_plat_can_recharge = 17 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->privileged_plat_can_recharge(), output);
  }

  // optional uint32 payment_terms = 18 [default = 0];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->payment_terms(), output);
  }

  // optional bytes valid_time = 19 [default = ""];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      19, this->valid_time(), output);
  }

  // optional uint32 sort_priority = 20 [default = 0];
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->sort_priority(), output);
  }

  // optional int32 suit_number = 21 [default = 0];
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->suit_number(), output);
  }

  // optional uint32 bag_sort_priority = 22 [default = 0];
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->bag_sort_priority(), output);
  }

  // optional bytes status = 23 [default = ""];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->status(), output);
  }

  // optional uint32 rank = 24 [default = 0];
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->rank(), output);
  }

  // optional uint32 price_discount = 25 [default = 0];
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->price_discount(), output);
  }

  // optional uint32 vip_discount = 26 [default = 0];
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->vip_discount(), output);
  }

  // repeated .ProtoBuf.GOODS_INFO.Price price_table = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->price_table_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->price_table(static_cast<int>(i)), output);
  }

  // repeated .ProtoBuf.GOODS_INFO.GoodsAttr goods_attr = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goods_attr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->goods_attr(static_cast<int>(i)), output);
  }

  // optional bytes description = 29 [default = ""];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      29, this->description(), output);
  }

  // optional uint32 limit_id = 30 [default = 0];
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->limit_id(), output);
  }

  // optional bytes subSystemId = 31 [default = ""];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      31, this->subsystemid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuf.GOODS_INFO)
}

::google::protobuf::uint8* GOODS_INFO::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuf.GOODS_INFO)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 goods_id = 1 [default = 0];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goods_id(), target);
  }

  // optional bytes name = 2 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // optional uint32 sex = 3 [default = 0];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sex(), target);
  }

  // optional uint32 level_limit = 4 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level_limit(), target);
  }

  // optional int32 club_vip_level = 5 [default = 0];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->club_vip_level(), target);
  }

  // optional int32 qb_2 = 6 [default = 0];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->qb_2(), target);
  }

  // optional uint32 consume_type = 7 [default = 0];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->consume_type(), target);
  }

  // optional uint32 time_unit = 8 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->time_unit(), target);
  }

  // optional uint32 is_online = 9 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->is_online(), target);
  }

  // optional uint32 can_buy = 10 [default = 0];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->can_buy(), target);
  }

  // optional uint32 can_recharge = 11 [default = 0];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->can_recharge(), target);
  }

  // optional bytes online_time = 12 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->online_time(), target);
  }

  // optional bytes offline_time = 13 [default = ""];
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->offline_time(), target);
  }

  // repeated uint32 privileged_plat_id_list = 14;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(14, this->privileged_plat_id_list_, target);

  // optional uint32 privileged_plat_is_online = 15 [default = 0];
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->privileged_plat_is_online(), target);
  }

  // optional uint32 privileged_plat_can_buy = 16 [default = 0];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->privileged_plat_can_buy(), target);
  }

  // optional uint32 privileged_plat_can_recharge = 17 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->privileged_plat_can_recharge(), target);
  }

  // optional uint32 payment_terms = 18 [default = 0];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->payment_terms(), target);
  }

  // optional bytes valid_time = 19 [default = ""];
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        19, this->valid_time(), target);
  }

  // optional uint32 sort_priority = 20 [default = 0];
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->sort_priority(), target);
  }

  // optional int32 suit_number = 21 [default = 0];
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->suit_number(), target);
  }

  // optional uint32 bag_sort_priority = 22 [default = 0];
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->bag_sort_priority(), target);
  }

  // optional bytes status = 23 [default = ""];
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->status(), target);
  }

  // optional uint32 rank = 24 [default = 0];
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->rank(), target);
  }

  // optional uint32 price_discount = 25 [default = 0];
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->price_discount(), target);
  }

  // optional uint32 vip_discount = 26 [default = 0];
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->vip_discount(), target);
  }

  // repeated .ProtoBuf.GOODS_INFO.Price price_table = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->price_table_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, this->price_table(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ProtoBuf.GOODS_INFO.GoodsAttr goods_attr = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goods_attr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28, this->goods_attr(static_cast<int>(i)), deterministic, target);
  }

  // optional bytes description = 29 [default = ""];
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        29, this->description(), target);
  }

  // optional uint32 limit_id = 30 [default = 0];
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->limit_id(), target);
  }

  // optional bytes subSystemId = 31 [default = ""];
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        31, this->subsystemid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuf.GOODS_INFO)
  return target;
}

size_t GOODS_INFO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoBuf.GOODS_INFO)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 goods_id = 1 [default = 0];
  if (has_goods_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goods_id());
  }
  // repeated uint32 privileged_plat_id_list = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->privileged_plat_id_list_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->privileged_plat_id_list_size());
    total_size += data_size;
  }

  // repeated .ProtoBuf.GOODS_INFO.Price price_table = 27;
  {
    unsigned int count = static_cast<unsigned int>(this->price_table_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->price_table(static_cast<int>(i)));
    }
  }

  // repeated .ProtoBuf.GOODS_INFO.GoodsAttr goods_attr = 28;
  {
    unsigned int count = static_cast<unsigned int>(this->goods_attr_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods_attr(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes name = 2 [default = ""];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

    // optional bytes online_time = 12 [default = ""];
    if (has_online_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->online_time());
    }

    // optional bytes offline_time = 13 [default = ""];
    if (has_offline_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->offline_time());
    }

    // optional bytes valid_time = 19 [default = ""];
    if (has_valid_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->valid_time());
    }

    // optional bytes status = 23 [default = ""];
    if (has_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->status());
    }

    // optional bytes description = 29 [default = ""];
    if (has_description()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->description());
    }

    // optional bytes subSystemId = 31 [default = ""];
    if (has_subsystemid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->subsystemid());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 sex = 3 [default = 0];
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sex());
    }

    // optional uint32 level_limit = 4 [default = 0];
    if (has_level_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level_limit());
    }

    // optional int32 club_vip_level = 5 [default = 0];
    if (has_club_vip_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->club_vip_level());
    }

    // optional int32 qb_2 = 6 [default = 0];
    if (has_qb_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qb_2());
    }

    // optional uint32 consume_type = 7 [default = 0];
    if (has_consume_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consume_type());
    }

    // optional uint32 time_unit = 8 [default = 0];
    if (has_time_unit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_unit());
    }

    // optional uint32 is_online = 9 [default = 0];
    if (has_is_online()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->is_online());
    }

    // optional uint32 can_buy = 10 [default = 0];
    if (has_can_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->can_buy());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional uint32 can_recharge = 11 [default = 0];
    if (has_can_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->can_recharge());
    }

    // optional uint32 privileged_plat_is_online = 15 [default = 0];
    if (has_privileged_plat_is_online()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->privileged_plat_is_online());
    }

    // optional uint32 privileged_plat_can_buy = 16 [default = 0];
    if (has_privileged_plat_can_buy()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->privileged_plat_can_buy());
    }

    // optional uint32 privileged_plat_can_recharge = 17 [default = 0];
    if (has_privileged_plat_can_recharge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->privileged_plat_can_recharge());
    }

    // optional uint32 payment_terms = 18 [default = 0];
    if (has_payment_terms()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->payment_terms());
    }

    // optional uint32 sort_priority = 20 [default = 0];
    if (has_sort_priority()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sort_priority());
    }

    // optional int32 suit_number = 21 [default = 0];
    if (has_suit_number()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->suit_number());
    }

    // optional uint32 bag_sort_priority = 22 [default = 0];
    if (has_bag_sort_priority()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bag_sort_priority());
    }

  }
  if (_has_bits_[24 / 32] & 251658240u) {
    // optional uint32 rank = 24 [default = 0];
    if (has_rank()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rank());
    }

    // optional uint32 price_discount = 25 [default = 0];
    if (has_price_discount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price_discount());
    }

    // optional uint32 vip_discount = 26 [default = 0];
    if (has_vip_discount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vip_discount());
    }

    // optional uint32 limit_id = 30 [default = 0];
    if (has_limit_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->limit_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GOODS_INFO::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoBuf.GOODS_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  const GOODS_INFO* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GOODS_INFO>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoBuf.GOODS_INFO)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoBuf.GOODS_INFO)
    MergeFrom(*source);
  }
}

void GOODS_INFO::MergeFrom(const GOODS_INFO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoBuf.GOODS_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  privileged_plat_id_list_.MergeFrom(from.privileged_plat_id_list_);
  price_table_.MergeFrom(from.price_table_);
  goods_attr_.MergeFrom(from.goods_attr_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_online_time();
      online_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_time_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_offline_time();
      offline_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offline_time_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_valid_time();
      valid_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valid_time_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_status();
      status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_subsystemid();
      subsystemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subsystemid_);
    }
    if (cached_has_bits & 0x00000080u) {
      goods_id_ = from.goods_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00000200u) {
      level_limit_ = from.level_limit_;
    }
    if (cached_has_bits & 0x00000400u) {
      club_vip_level_ = from.club_vip_level_;
    }
    if (cached_has_bits & 0x00000800u) {
      qb_2_ = from.qb_2_;
    }
    if (cached_has_bits & 0x00001000u) {
      consume_type_ = from.consume_type_;
    }
    if (cached_has_bits & 0x00002000u) {
      time_unit_ = from.time_unit_;
    }
    if (cached_has_bits & 0x00004000u) {
      is_online_ = from.is_online_;
    }
    if (cached_has_bits & 0x00008000u) {
      can_buy_ = from.can_buy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      can_recharge_ = from.can_recharge_;
    }
    if (cached_has_bits & 0x00020000u) {
      privileged_plat_is_online_ = from.privileged_plat_is_online_;
    }
    if (cached_has_bits & 0x00040000u) {
      privileged_plat_can_buy_ = from.privileged_plat_can_buy_;
    }
    if (cached_has_bits & 0x00080000u) {
      privileged_plat_can_recharge_ = from.privileged_plat_can_recharge_;
    }
    if (cached_has_bits & 0x00100000u) {
      payment_terms_ = from.payment_terms_;
    }
    if (cached_has_bits & 0x00200000u) {
      sort_priority_ = from.sort_priority_;
    }
    if (cached_has_bits & 0x00400000u) {
      suit_number_ = from.suit_number_;
    }
    if (cached_has_bits & 0x00800000u) {
      bag_sort_priority_ = from.bag_sort_priority_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 251658240u) {
    if (cached_has_bits & 0x01000000u) {
      rank_ = from.rank_;
    }
    if (cached_has_bits & 0x02000000u) {
      price_discount_ = from.price_discount_;
    }
    if (cached_has_bits & 0x04000000u) {
      vip_discount_ = from.vip_discount_;
    }
    if (cached_has_bits & 0x08000000u) {
      limit_id_ = from.limit_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GOODS_INFO::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoBuf.GOODS_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GOODS_INFO::CopyFrom(const GOODS_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoBuf.GOODS_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GOODS_INFO::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000080) != 0x00000080) return false;
  return true;
}

void GOODS_INFO::Swap(GOODS_INFO* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GOODS_INFO::InternalSwap(GOODS_INFO* other) {
  using std::swap;
  privileged_plat_id_list_.InternalSwap(&other->privileged_plat_id_list_);
  price_table_.InternalSwap(&other->price_table_);
  goods_attr_.InternalSwap(&other->goods_attr_);
  name_.Swap(&other->name_);
  online_time_.Swap(&other->online_time_);
  offline_time_.Swap(&other->offline_time_);
  valid_time_.Swap(&other->valid_time_);
  status_.Swap(&other->status_);
  description_.Swap(&other->description_);
  subsystemid_.Swap(&other->subsystemid_);
  swap(goods_id_, other->goods_id_);
  swap(sex_, other->sex_);
  swap(level_limit_, other->level_limit_);
  swap(club_vip_level_, other->club_vip_level_);
  swap(qb_2_, other->qb_2_);
  swap(consume_type_, other->consume_type_);
  swap(time_unit_, other->time_unit_);
  swap(is_online_, other->is_online_);
  swap(can_buy_, other->can_buy_);
  swap(can_recharge_, other->can_recharge_);
  swap(privileged_plat_is_online_, other->privileged_plat_is_online_);
  swap(privileged_plat_can_buy_, other->privileged_plat_can_buy_);
  swap(privileged_plat_can_recharge_, other->privileged_plat_can_recharge_);
  swap(payment_terms_, other->payment_terms_);
  swap(sort_priority_, other->sort_priority_);
  swap(suit_number_, other->suit_number_);
  swap(bag_sort_priority_, other->bag_sort_priority_);
  swap(rank_, other->rank_);
  swap(price_discount_, other->price_discount_);
  swap(vip_discount_, other->vip_discount_);
  swap(limit_id_, other->limit_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GOODS_INFO::GetMetadata() const {
  protobuf_GOODS_5fINFO_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GOODS_5fINFO_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GOODS_INFO

// required uint32 goods_id = 1 [default = 0];
bool GOODS_INFO::has_goods_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GOODS_INFO::set_has_goods_id() {
  _has_bits_[0] |= 0x00000080u;
}
void GOODS_INFO::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000080u;
}
void GOODS_INFO::clear_goods_id() {
  goods_id_ = 0u;
  clear_has_goods_id();
}
::google::protobuf::uint32 GOODS_INFO::goods_id() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.goods_id)
  return goods_id_;
}
void GOODS_INFO::set_goods_id(::google::protobuf::uint32 value) {
  set_has_goods_id();
  goods_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.goods_id)
}

// optional bytes name = 2 [default = ""];
bool GOODS_INFO::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GOODS_INFO::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void GOODS_INFO::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void GOODS_INFO::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& GOODS_INFO::name() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.name)
  return name_.GetNoArena();
}
void GOODS_INFO::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.name)
}
#if LANG_CXX11
void GOODS_INFO::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoBuf.GOODS_INFO.name)
}
#endif
void GOODS_INFO::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoBuf.GOODS_INFO.name)
}
void GOODS_INFO::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoBuf.GOODS_INFO.name)
}
::std::string* GOODS_INFO::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ProtoBuf.GOODS_INFO.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GOODS_INFO::release_name() {
  // @@protoc_insertion_point(field_release:ProtoBuf.GOODS_INFO.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GOODS_INFO::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtoBuf.GOODS_INFO.name)
}

// optional uint32 sex = 3 [default = 0];
bool GOODS_INFO::has_sex() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GOODS_INFO::set_has_sex() {
  _has_bits_[0] |= 0x00000100u;
}
void GOODS_INFO::clear_has_sex() {
  _has_bits_[0] &= ~0x00000100u;
}
void GOODS_INFO::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
::google::protobuf::uint32 GOODS_INFO::sex() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.sex)
  return sex_;
}
void GOODS_INFO::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.sex)
}

// optional uint32 level_limit = 4 [default = 0];
bool GOODS_INFO::has_level_limit() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void GOODS_INFO::set_has_level_limit() {
  _has_bits_[0] |= 0x00000200u;
}
void GOODS_INFO::clear_has_level_limit() {
  _has_bits_[0] &= ~0x00000200u;
}
void GOODS_INFO::clear_level_limit() {
  level_limit_ = 0u;
  clear_has_level_limit();
}
::google::protobuf::uint32 GOODS_INFO::level_limit() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.level_limit)
  return level_limit_;
}
void GOODS_INFO::set_level_limit(::google::protobuf::uint32 value) {
  set_has_level_limit();
  level_limit_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.level_limit)
}

// optional int32 club_vip_level = 5 [default = 0];
bool GOODS_INFO::has_club_vip_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void GOODS_INFO::set_has_club_vip_level() {
  _has_bits_[0] |= 0x00000400u;
}
void GOODS_INFO::clear_has_club_vip_level() {
  _has_bits_[0] &= ~0x00000400u;
}
void GOODS_INFO::clear_club_vip_level() {
  club_vip_level_ = 0;
  clear_has_club_vip_level();
}
::google::protobuf::int32 GOODS_INFO::club_vip_level() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.club_vip_level)
  return club_vip_level_;
}
void GOODS_INFO::set_club_vip_level(::google::protobuf::int32 value) {
  set_has_club_vip_level();
  club_vip_level_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.club_vip_level)
}

// optional int32 qb_2 = 6 [default = 0];
bool GOODS_INFO::has_qb_2() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void GOODS_INFO::set_has_qb_2() {
  _has_bits_[0] |= 0x00000800u;
}
void GOODS_INFO::clear_has_qb_2() {
  _has_bits_[0] &= ~0x00000800u;
}
void GOODS_INFO::clear_qb_2() {
  qb_2_ = 0;
  clear_has_qb_2();
}
::google::protobuf::int32 GOODS_INFO::qb_2() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.qb_2)
  return qb_2_;
}
void GOODS_INFO::set_qb_2(::google::protobuf::int32 value) {
  set_has_qb_2();
  qb_2_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.qb_2)
}

// optional uint32 consume_type = 7 [default = 0];
bool GOODS_INFO::has_consume_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void GOODS_INFO::set_has_consume_type() {
  _has_bits_[0] |= 0x00001000u;
}
void GOODS_INFO::clear_has_consume_type() {
  _has_bits_[0] &= ~0x00001000u;
}
void GOODS_INFO::clear_consume_type() {
  consume_type_ = 0u;
  clear_has_consume_type();
}
::google::protobuf::uint32 GOODS_INFO::consume_type() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.consume_type)
  return consume_type_;
}
void GOODS_INFO::set_consume_type(::google::protobuf::uint32 value) {
  set_has_consume_type();
  consume_type_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.consume_type)
}

// optional uint32 time_unit = 8 [default = 0];
bool GOODS_INFO::has_time_unit() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void GOODS_INFO::set_has_time_unit() {
  _has_bits_[0] |= 0x00002000u;
}
void GOODS_INFO::clear_has_time_unit() {
  _has_bits_[0] &= ~0x00002000u;
}
void GOODS_INFO::clear_time_unit() {
  time_unit_ = 0u;
  clear_has_time_unit();
}
::google::protobuf::uint32 GOODS_INFO::time_unit() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.time_unit)
  return time_unit_;
}
void GOODS_INFO::set_time_unit(::google::protobuf::uint32 value) {
  set_has_time_unit();
  time_unit_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.time_unit)
}

// optional uint32 is_online = 9 [default = 0];
bool GOODS_INFO::has_is_online() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void GOODS_INFO::set_has_is_online() {
  _has_bits_[0] |= 0x00004000u;
}
void GOODS_INFO::clear_has_is_online() {
  _has_bits_[0] &= ~0x00004000u;
}
void GOODS_INFO::clear_is_online() {
  is_online_ = 0u;
  clear_has_is_online();
}
::google::protobuf::uint32 GOODS_INFO::is_online() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.is_online)
  return is_online_;
}
void GOODS_INFO::set_is_online(::google::protobuf::uint32 value) {
  set_has_is_online();
  is_online_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.is_online)
}

// optional uint32 can_buy = 10 [default = 0];
bool GOODS_INFO::has_can_buy() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void GOODS_INFO::set_has_can_buy() {
  _has_bits_[0] |= 0x00008000u;
}
void GOODS_INFO::clear_has_can_buy() {
  _has_bits_[0] &= ~0x00008000u;
}
void GOODS_INFO::clear_can_buy() {
  can_buy_ = 0u;
  clear_has_can_buy();
}
::google::protobuf::uint32 GOODS_INFO::can_buy() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.can_buy)
  return can_buy_;
}
void GOODS_INFO::set_can_buy(::google::protobuf::uint32 value) {
  set_has_can_buy();
  can_buy_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.can_buy)
}

// optional uint32 can_recharge = 11 [default = 0];
bool GOODS_INFO::has_can_recharge() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void GOODS_INFO::set_has_can_recharge() {
  _has_bits_[0] |= 0x00010000u;
}
void GOODS_INFO::clear_has_can_recharge() {
  _has_bits_[0] &= ~0x00010000u;
}
void GOODS_INFO::clear_can_recharge() {
  can_recharge_ = 0u;
  clear_has_can_recharge();
}
::google::protobuf::uint32 GOODS_INFO::can_recharge() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.can_recharge)
  return can_recharge_;
}
void GOODS_INFO::set_can_recharge(::google::protobuf::uint32 value) {
  set_has_can_recharge();
  can_recharge_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.can_recharge)
}

// optional bytes online_time = 12 [default = ""];
bool GOODS_INFO::has_online_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GOODS_INFO::set_has_online_time() {
  _has_bits_[0] |= 0x00000002u;
}
void GOODS_INFO::clear_has_online_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void GOODS_INFO::clear_online_time() {
  online_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_online_time();
}
const ::std::string& GOODS_INFO::online_time() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.online_time)
  return online_time_.GetNoArena();
}
void GOODS_INFO::set_online_time(const ::std::string& value) {
  set_has_online_time();
  online_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.online_time)
}
#if LANG_CXX11
void GOODS_INFO::set_online_time(::std::string&& value) {
  set_has_online_time();
  online_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoBuf.GOODS_INFO.online_time)
}
#endif
void GOODS_INFO::set_online_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_online_time();
  online_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoBuf.GOODS_INFO.online_time)
}
void GOODS_INFO::set_online_time(const void* value, size_t size) {
  set_has_online_time();
  online_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoBuf.GOODS_INFO.online_time)
}
::std::string* GOODS_INFO::mutable_online_time() {
  set_has_online_time();
  // @@protoc_insertion_point(field_mutable:ProtoBuf.GOODS_INFO.online_time)
  return online_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GOODS_INFO::release_online_time() {
  // @@protoc_insertion_point(field_release:ProtoBuf.GOODS_INFO.online_time)
  clear_has_online_time();
  return online_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GOODS_INFO::set_allocated_online_time(::std::string* online_time) {
  if (online_time != NULL) {
    set_has_online_time();
  } else {
    clear_has_online_time();
  }
  online_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_time);
  // @@protoc_insertion_point(field_set_allocated:ProtoBuf.GOODS_INFO.online_time)
}

// optional bytes offline_time = 13 [default = ""];
bool GOODS_INFO::has_offline_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GOODS_INFO::set_has_offline_time() {
  _has_bits_[0] |= 0x00000004u;
}
void GOODS_INFO::clear_has_offline_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void GOODS_INFO::clear_offline_time() {
  offline_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_offline_time();
}
const ::std::string& GOODS_INFO::offline_time() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.offline_time)
  return offline_time_.GetNoArena();
}
void GOODS_INFO::set_offline_time(const ::std::string& value) {
  set_has_offline_time();
  offline_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.offline_time)
}
#if LANG_CXX11
void GOODS_INFO::set_offline_time(::std::string&& value) {
  set_has_offline_time();
  offline_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoBuf.GOODS_INFO.offline_time)
}
#endif
void GOODS_INFO::set_offline_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_offline_time();
  offline_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoBuf.GOODS_INFO.offline_time)
}
void GOODS_INFO::set_offline_time(const void* value, size_t size) {
  set_has_offline_time();
  offline_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoBuf.GOODS_INFO.offline_time)
}
::std::string* GOODS_INFO::mutable_offline_time() {
  set_has_offline_time();
  // @@protoc_insertion_point(field_mutable:ProtoBuf.GOODS_INFO.offline_time)
  return offline_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GOODS_INFO::release_offline_time() {
  // @@protoc_insertion_point(field_release:ProtoBuf.GOODS_INFO.offline_time)
  clear_has_offline_time();
  return offline_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GOODS_INFO::set_allocated_offline_time(::std::string* offline_time) {
  if (offline_time != NULL) {
    set_has_offline_time();
  } else {
    clear_has_offline_time();
  }
  offline_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offline_time);
  // @@protoc_insertion_point(field_set_allocated:ProtoBuf.GOODS_INFO.offline_time)
}

// repeated uint32 privileged_plat_id_list = 14;
int GOODS_INFO::privileged_plat_id_list_size() const {
  return privileged_plat_id_list_.size();
}
void GOODS_INFO::clear_privileged_plat_id_list() {
  privileged_plat_id_list_.Clear();
}
::google::protobuf::uint32 GOODS_INFO::privileged_plat_id_list(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.privileged_plat_id_list)
  return privileged_plat_id_list_.Get(index);
}
void GOODS_INFO::set_privileged_plat_id_list(int index, ::google::protobuf::uint32 value) {
  privileged_plat_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.privileged_plat_id_list)
}
void GOODS_INFO::add_privileged_plat_id_list(::google::protobuf::uint32 value) {
  privileged_plat_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:ProtoBuf.GOODS_INFO.privileged_plat_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GOODS_INFO::privileged_plat_id_list() const {
  // @@protoc_insertion_point(field_list:ProtoBuf.GOODS_INFO.privileged_plat_id_list)
  return privileged_plat_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GOODS_INFO::mutable_privileged_plat_id_list() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBuf.GOODS_INFO.privileged_plat_id_list)
  return &privileged_plat_id_list_;
}

// optional uint32 privileged_plat_is_online = 15 [default = 0];
bool GOODS_INFO::has_privileged_plat_is_online() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void GOODS_INFO::set_has_privileged_plat_is_online() {
  _has_bits_[0] |= 0x00020000u;
}
void GOODS_INFO::clear_has_privileged_plat_is_online() {
  _has_bits_[0] &= ~0x00020000u;
}
void GOODS_INFO::clear_privileged_plat_is_online() {
  privileged_plat_is_online_ = 0u;
  clear_has_privileged_plat_is_online();
}
::google::protobuf::uint32 GOODS_INFO::privileged_plat_is_online() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.privileged_plat_is_online)
  return privileged_plat_is_online_;
}
void GOODS_INFO::set_privileged_plat_is_online(::google::protobuf::uint32 value) {
  set_has_privileged_plat_is_online();
  privileged_plat_is_online_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.privileged_plat_is_online)
}

// optional uint32 privileged_plat_can_buy = 16 [default = 0];
bool GOODS_INFO::has_privileged_plat_can_buy() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void GOODS_INFO::set_has_privileged_plat_can_buy() {
  _has_bits_[0] |= 0x00040000u;
}
void GOODS_INFO::clear_has_privileged_plat_can_buy() {
  _has_bits_[0] &= ~0x00040000u;
}
void GOODS_INFO::clear_privileged_plat_can_buy() {
  privileged_plat_can_buy_ = 0u;
  clear_has_privileged_plat_can_buy();
}
::google::protobuf::uint32 GOODS_INFO::privileged_plat_can_buy() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.privileged_plat_can_buy)
  return privileged_plat_can_buy_;
}
void GOODS_INFO::set_privileged_plat_can_buy(::google::protobuf::uint32 value) {
  set_has_privileged_plat_can_buy();
  privileged_plat_can_buy_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.privileged_plat_can_buy)
}

// optional uint32 privileged_plat_can_recharge = 17 [default = 0];
bool GOODS_INFO::has_privileged_plat_can_recharge() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void GOODS_INFO::set_has_privileged_plat_can_recharge() {
  _has_bits_[0] |= 0x00080000u;
}
void GOODS_INFO::clear_has_privileged_plat_can_recharge() {
  _has_bits_[0] &= ~0x00080000u;
}
void GOODS_INFO::clear_privileged_plat_can_recharge() {
  privileged_plat_can_recharge_ = 0u;
  clear_has_privileged_plat_can_recharge();
}
::google::protobuf::uint32 GOODS_INFO::privileged_plat_can_recharge() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.privileged_plat_can_recharge)
  return privileged_plat_can_recharge_;
}
void GOODS_INFO::set_privileged_plat_can_recharge(::google::protobuf::uint32 value) {
  set_has_privileged_plat_can_recharge();
  privileged_plat_can_recharge_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.privileged_plat_can_recharge)
}

// optional uint32 payment_terms = 18 [default = 0];
bool GOODS_INFO::has_payment_terms() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void GOODS_INFO::set_has_payment_terms() {
  _has_bits_[0] |= 0x00100000u;
}
void GOODS_INFO::clear_has_payment_terms() {
  _has_bits_[0] &= ~0x00100000u;
}
void GOODS_INFO::clear_payment_terms() {
  payment_terms_ = 0u;
  clear_has_payment_terms();
}
::google::protobuf::uint32 GOODS_INFO::payment_terms() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.payment_terms)
  return payment_terms_;
}
void GOODS_INFO::set_payment_terms(::google::protobuf::uint32 value) {
  set_has_payment_terms();
  payment_terms_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.payment_terms)
}

// optional bytes valid_time = 19 [default = ""];
bool GOODS_INFO::has_valid_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GOODS_INFO::set_has_valid_time() {
  _has_bits_[0] |= 0x00000008u;
}
void GOODS_INFO::clear_has_valid_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void GOODS_INFO::clear_valid_time() {
  valid_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_valid_time();
}
const ::std::string& GOODS_INFO::valid_time() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.valid_time)
  return valid_time_.GetNoArena();
}
void GOODS_INFO::set_valid_time(const ::std::string& value) {
  set_has_valid_time();
  valid_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.valid_time)
}
#if LANG_CXX11
void GOODS_INFO::set_valid_time(::std::string&& value) {
  set_has_valid_time();
  valid_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoBuf.GOODS_INFO.valid_time)
}
#endif
void GOODS_INFO::set_valid_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_valid_time();
  valid_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoBuf.GOODS_INFO.valid_time)
}
void GOODS_INFO::set_valid_time(const void* value, size_t size) {
  set_has_valid_time();
  valid_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoBuf.GOODS_INFO.valid_time)
}
::std::string* GOODS_INFO::mutable_valid_time() {
  set_has_valid_time();
  // @@protoc_insertion_point(field_mutable:ProtoBuf.GOODS_INFO.valid_time)
  return valid_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GOODS_INFO::release_valid_time() {
  // @@protoc_insertion_point(field_release:ProtoBuf.GOODS_INFO.valid_time)
  clear_has_valid_time();
  return valid_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GOODS_INFO::set_allocated_valid_time(::std::string* valid_time) {
  if (valid_time != NULL) {
    set_has_valid_time();
  } else {
    clear_has_valid_time();
  }
  valid_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valid_time);
  // @@protoc_insertion_point(field_set_allocated:ProtoBuf.GOODS_INFO.valid_time)
}

// optional uint32 sort_priority = 20 [default = 0];
bool GOODS_INFO::has_sort_priority() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void GOODS_INFO::set_has_sort_priority() {
  _has_bits_[0] |= 0x00200000u;
}
void GOODS_INFO::clear_has_sort_priority() {
  _has_bits_[0] &= ~0x00200000u;
}
void GOODS_INFO::clear_sort_priority() {
  sort_priority_ = 0u;
  clear_has_sort_priority();
}
::google::protobuf::uint32 GOODS_INFO::sort_priority() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.sort_priority)
  return sort_priority_;
}
void GOODS_INFO::set_sort_priority(::google::protobuf::uint32 value) {
  set_has_sort_priority();
  sort_priority_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.sort_priority)
}

// optional int32 suit_number = 21 [default = 0];
bool GOODS_INFO::has_suit_number() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void GOODS_INFO::set_has_suit_number() {
  _has_bits_[0] |= 0x00400000u;
}
void GOODS_INFO::clear_has_suit_number() {
  _has_bits_[0] &= ~0x00400000u;
}
void GOODS_INFO::clear_suit_number() {
  suit_number_ = 0;
  clear_has_suit_number();
}
::google::protobuf::int32 GOODS_INFO::suit_number() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.suit_number)
  return suit_number_;
}
void GOODS_INFO::set_suit_number(::google::protobuf::int32 value) {
  set_has_suit_number();
  suit_number_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.suit_number)
}

// optional uint32 bag_sort_priority = 22 [default = 0];
bool GOODS_INFO::has_bag_sort_priority() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void GOODS_INFO::set_has_bag_sort_priority() {
  _has_bits_[0] |= 0x00800000u;
}
void GOODS_INFO::clear_has_bag_sort_priority() {
  _has_bits_[0] &= ~0x00800000u;
}
void GOODS_INFO::clear_bag_sort_priority() {
  bag_sort_priority_ = 0u;
  clear_has_bag_sort_priority();
}
::google::protobuf::uint32 GOODS_INFO::bag_sort_priority() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.bag_sort_priority)
  return bag_sort_priority_;
}
void GOODS_INFO::set_bag_sort_priority(::google::protobuf::uint32 value) {
  set_has_bag_sort_priority();
  bag_sort_priority_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.bag_sort_priority)
}

// optional bytes status = 23 [default = ""];
bool GOODS_INFO::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GOODS_INFO::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
void GOODS_INFO::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
void GOODS_INFO::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status();
}
const ::std::string& GOODS_INFO::status() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.status)
  return status_.GetNoArena();
}
void GOODS_INFO::set_status(const ::std::string& value) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.status)
}
#if LANG_CXX11
void GOODS_INFO::set_status(::std::string&& value) {
  set_has_status();
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoBuf.GOODS_INFO.status)
}
#endif
void GOODS_INFO::set_status(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoBuf.GOODS_INFO.status)
}
void GOODS_INFO::set_status(const void* value, size_t size) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoBuf.GOODS_INFO.status)
}
::std::string* GOODS_INFO::mutable_status() {
  set_has_status();
  // @@protoc_insertion_point(field_mutable:ProtoBuf.GOODS_INFO.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GOODS_INFO::release_status() {
  // @@protoc_insertion_point(field_release:ProtoBuf.GOODS_INFO.status)
  clear_has_status();
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GOODS_INFO::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    set_has_status();
  } else {
    clear_has_status();
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:ProtoBuf.GOODS_INFO.status)
}

// optional uint32 rank = 24 [default = 0];
bool GOODS_INFO::has_rank() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void GOODS_INFO::set_has_rank() {
  _has_bits_[0] |= 0x01000000u;
}
void GOODS_INFO::clear_has_rank() {
  _has_bits_[0] &= ~0x01000000u;
}
void GOODS_INFO::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
::google::protobuf::uint32 GOODS_INFO::rank() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.rank)
  return rank_;
}
void GOODS_INFO::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.rank)
}

// optional uint32 price_discount = 25 [default = 0];
bool GOODS_INFO::has_price_discount() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void GOODS_INFO::set_has_price_discount() {
  _has_bits_[0] |= 0x02000000u;
}
void GOODS_INFO::clear_has_price_discount() {
  _has_bits_[0] &= ~0x02000000u;
}
void GOODS_INFO::clear_price_discount() {
  price_discount_ = 0u;
  clear_has_price_discount();
}
::google::protobuf::uint32 GOODS_INFO::price_discount() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.price_discount)
  return price_discount_;
}
void GOODS_INFO::set_price_discount(::google::protobuf::uint32 value) {
  set_has_price_discount();
  price_discount_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.price_discount)
}

// optional uint32 vip_discount = 26 [default = 0];
bool GOODS_INFO::has_vip_discount() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void GOODS_INFO::set_has_vip_discount() {
  _has_bits_[0] |= 0x04000000u;
}
void GOODS_INFO::clear_has_vip_discount() {
  _has_bits_[0] &= ~0x04000000u;
}
void GOODS_INFO::clear_vip_discount() {
  vip_discount_ = 0u;
  clear_has_vip_discount();
}
::google::protobuf::uint32 GOODS_INFO::vip_discount() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.vip_discount)
  return vip_discount_;
}
void GOODS_INFO::set_vip_discount(::google::protobuf::uint32 value) {
  set_has_vip_discount();
  vip_discount_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.vip_discount)
}

// repeated .ProtoBuf.GOODS_INFO.Price price_table = 27;
int GOODS_INFO::price_table_size() const {
  return price_table_.size();
}
void GOODS_INFO::clear_price_table() {
  price_table_.Clear();
}
const ::ProtoBuf::GOODS_INFO_Price& GOODS_INFO::price_table(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.price_table)
  return price_table_.Get(index);
}
::ProtoBuf::GOODS_INFO_Price* GOODS_INFO::mutable_price_table(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBuf.GOODS_INFO.price_table)
  return price_table_.Mutable(index);
}
::ProtoBuf::GOODS_INFO_Price* GOODS_INFO::add_price_table() {
  // @@protoc_insertion_point(field_add:ProtoBuf.GOODS_INFO.price_table)
  return price_table_.Add();
}
::google::protobuf::RepeatedPtrField< ::ProtoBuf::GOODS_INFO_Price >*
GOODS_INFO::mutable_price_table() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBuf.GOODS_INFO.price_table)
  return &price_table_;
}
const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::GOODS_INFO_Price >&
GOODS_INFO::price_table() const {
  // @@protoc_insertion_point(field_list:ProtoBuf.GOODS_INFO.price_table)
  return price_table_;
}

// repeated .ProtoBuf.GOODS_INFO.GoodsAttr goods_attr = 28;
int GOODS_INFO::goods_attr_size() const {
  return goods_attr_.size();
}
void GOODS_INFO::clear_goods_attr() {
  goods_attr_.Clear();
}
const ::ProtoBuf::GOODS_INFO_GoodsAttr& GOODS_INFO::goods_attr(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.goods_attr)
  return goods_attr_.Get(index);
}
::ProtoBuf::GOODS_INFO_GoodsAttr* GOODS_INFO::mutable_goods_attr(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBuf.GOODS_INFO.goods_attr)
  return goods_attr_.Mutable(index);
}
::ProtoBuf::GOODS_INFO_GoodsAttr* GOODS_INFO::add_goods_attr() {
  // @@protoc_insertion_point(field_add:ProtoBuf.GOODS_INFO.goods_attr)
  return goods_attr_.Add();
}
::google::protobuf::RepeatedPtrField< ::ProtoBuf::GOODS_INFO_GoodsAttr >*
GOODS_INFO::mutable_goods_attr() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBuf.GOODS_INFO.goods_attr)
  return &goods_attr_;
}
const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::GOODS_INFO_GoodsAttr >&
GOODS_INFO::goods_attr() const {
  // @@protoc_insertion_point(field_list:ProtoBuf.GOODS_INFO.goods_attr)
  return goods_attr_;
}

// optional bytes description = 29 [default = ""];
bool GOODS_INFO::has_description() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GOODS_INFO::set_has_description() {
  _has_bits_[0] |= 0x00000020u;
}
void GOODS_INFO::clear_has_description() {
  _has_bits_[0] &= ~0x00000020u;
}
void GOODS_INFO::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& GOODS_INFO::description() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.description)
  return description_.GetNoArena();
}
void GOODS_INFO::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.description)
}
#if LANG_CXX11
void GOODS_INFO::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoBuf.GOODS_INFO.description)
}
#endif
void GOODS_INFO::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoBuf.GOODS_INFO.description)
}
void GOODS_INFO::set_description(const void* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoBuf.GOODS_INFO.description)
}
::std::string* GOODS_INFO::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:ProtoBuf.GOODS_INFO.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GOODS_INFO::release_description() {
  // @@protoc_insertion_point(field_release:ProtoBuf.GOODS_INFO.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GOODS_INFO::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ProtoBuf.GOODS_INFO.description)
}

// optional uint32 limit_id = 30 [default = 0];
bool GOODS_INFO::has_limit_id() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void GOODS_INFO::set_has_limit_id() {
  _has_bits_[0] |= 0x08000000u;
}
void GOODS_INFO::clear_has_limit_id() {
  _has_bits_[0] &= ~0x08000000u;
}
void GOODS_INFO::clear_limit_id() {
  limit_id_ = 0u;
  clear_has_limit_id();
}
::google::protobuf::uint32 GOODS_INFO::limit_id() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.limit_id)
  return limit_id_;
}
void GOODS_INFO::set_limit_id(::google::protobuf::uint32 value) {
  set_has_limit_id();
  limit_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.limit_id)
}

// optional bytes subSystemId = 31 [default = ""];
bool GOODS_INFO::has_subsystemid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GOODS_INFO::set_has_subsystemid() {
  _has_bits_[0] |= 0x00000040u;
}
void GOODS_INFO::clear_has_subsystemid() {
  _has_bits_[0] &= ~0x00000040u;
}
void GOODS_INFO::clear_subsystemid() {
  subsystemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subsystemid();
}
const ::std::string& GOODS_INFO::subsystemid() const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO.subSystemId)
  return subsystemid_.GetNoArena();
}
void GOODS_INFO::set_subsystemid(const ::std::string& value) {
  set_has_subsystemid();
  subsystemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoBuf.GOODS_INFO.subSystemId)
}
#if LANG_CXX11
void GOODS_INFO::set_subsystemid(::std::string&& value) {
  set_has_subsystemid();
  subsystemid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoBuf.GOODS_INFO.subSystemId)
}
#endif
void GOODS_INFO::set_subsystemid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_subsystemid();
  subsystemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoBuf.GOODS_INFO.subSystemId)
}
void GOODS_INFO::set_subsystemid(const void* value, size_t size) {
  set_has_subsystemid();
  subsystemid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoBuf.GOODS_INFO.subSystemId)
}
::std::string* GOODS_INFO::mutable_subsystemid() {
  set_has_subsystemid();
  // @@protoc_insertion_point(field_mutable:ProtoBuf.GOODS_INFO.subSystemId)
  return subsystemid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GOODS_INFO::release_subsystemid() {
  // @@protoc_insertion_point(field_release:ProtoBuf.GOODS_INFO.subSystemId)
  clear_has_subsystemid();
  return subsystemid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GOODS_INFO::set_allocated_subsystemid(::std::string* subsystemid) {
  if (subsystemid != NULL) {
    set_has_subsystemid();
  } else {
    clear_has_subsystemid();
  }
  subsystemid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subsystemid);
  // @@protoc_insertion_point(field_set_allocated:ProtoBuf.GOODS_INFO.subSystemId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GOODS_INFO_ARRAY::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GOODS_INFO_ARRAY::GOODS_INFO_ARRAY()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_GOODS_5fINFO_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoBuf.GOODS_INFO_ARRAY)
}
GOODS_INFO_ARRAY::GOODS_INFO_ARRAY(const GOODS_INFO_ARRAY& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoBuf.GOODS_INFO_ARRAY)
}

void GOODS_INFO_ARRAY::SharedCtor() {
  _cached_size_ = 0;
}

GOODS_INFO_ARRAY::~GOODS_INFO_ARRAY() {
  // @@protoc_insertion_point(destructor:ProtoBuf.GOODS_INFO_ARRAY)
  SharedDtor();
}

void GOODS_INFO_ARRAY::SharedDtor() {
}

void GOODS_INFO_ARRAY::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GOODS_INFO_ARRAY::descriptor() {
  protobuf_GOODS_5fINFO_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GOODS_5fINFO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GOODS_INFO_ARRAY& GOODS_INFO_ARRAY::default_instance() {
  protobuf_GOODS_5fINFO_2eproto::InitDefaults();
  return *internal_default_instance();
}

GOODS_INFO_ARRAY* GOODS_INFO_ARRAY::New(::google::protobuf::Arena* arena) const {
  GOODS_INFO_ARRAY* n = new GOODS_INFO_ARRAY;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GOODS_INFO_ARRAY::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoBuf.GOODS_INFO_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GOODS_INFO_ARRAY::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoBuf.GOODS_INFO_ARRAY)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoBuf.GOODS_INFO items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoBuf.GOODS_INFO_ARRAY)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoBuf.GOODS_INFO_ARRAY)
  return false;
#undef DO_
}

void GOODS_INFO_ARRAY::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoBuf.GOODS_INFO_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ProtoBuf.GOODS_INFO items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoBuf.GOODS_INFO_ARRAY)
}

::google::protobuf::uint8* GOODS_INFO_ARRAY::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoBuf.GOODS_INFO_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ProtoBuf.GOODS_INFO items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoBuf.GOODS_INFO_ARRAY)
  return target;
}

size_t GOODS_INFO_ARRAY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoBuf.GOODS_INFO_ARRAY)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .ProtoBuf.GOODS_INFO items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GOODS_INFO_ARRAY::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoBuf.GOODS_INFO_ARRAY)
  GOOGLE_DCHECK_NE(&from, this);
  const GOODS_INFO_ARRAY* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GOODS_INFO_ARRAY>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoBuf.GOODS_INFO_ARRAY)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoBuf.GOODS_INFO_ARRAY)
    MergeFrom(*source);
  }
}

void GOODS_INFO_ARRAY::MergeFrom(const GOODS_INFO_ARRAY& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoBuf.GOODS_INFO_ARRAY)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void GOODS_INFO_ARRAY::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoBuf.GOODS_INFO_ARRAY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GOODS_INFO_ARRAY::CopyFrom(const GOODS_INFO_ARRAY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoBuf.GOODS_INFO_ARRAY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GOODS_INFO_ARRAY::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  return true;
}

void GOODS_INFO_ARRAY::Swap(GOODS_INFO_ARRAY* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GOODS_INFO_ARRAY::InternalSwap(GOODS_INFO_ARRAY* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GOODS_INFO_ARRAY::GetMetadata() const {
  protobuf_GOODS_5fINFO_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GOODS_5fINFO_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GOODS_INFO_ARRAY

// repeated .ProtoBuf.GOODS_INFO items = 1;
int GOODS_INFO_ARRAY::items_size() const {
  return items_.size();
}
void GOODS_INFO_ARRAY::clear_items() {
  items_.Clear();
}
const ::ProtoBuf::GOODS_INFO& GOODS_INFO_ARRAY::items(int index) const {
  // @@protoc_insertion_point(field_get:ProtoBuf.GOODS_INFO_ARRAY.items)
  return items_.Get(index);
}
::ProtoBuf::GOODS_INFO* GOODS_INFO_ARRAY::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoBuf.GOODS_INFO_ARRAY.items)
  return items_.Mutable(index);
}
::ProtoBuf::GOODS_INFO* GOODS_INFO_ARRAY::add_items() {
  // @@protoc_insertion_point(field_add:ProtoBuf.GOODS_INFO_ARRAY.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::ProtoBuf::GOODS_INFO >*
GOODS_INFO_ARRAY::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:ProtoBuf.GOODS_INFO_ARRAY.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::ProtoBuf::GOODS_INFO >&
GOODS_INFO_ARRAY::items() const {
  // @@protoc_insertion_point(field_list:ProtoBuf.GOODS_INFO_ARRAY.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf

// @@protoc_insertion_point(global_scope)
